#include<bits/stdc++.h>
using namespace std;
  
int merge(int arr[],int temp[], int l, int mid , int r)
{
    int inv = 0;
   int i = l,
   j = mid+1,
   k = l;
    while(i <= mid && j <= r)
    {
        if(arr[i] <= arr[j])
        {
            temp[k++] = arr[i++]; 
        }
        else
           {
               temp[k++] = arr[j++];
               
               inv += (mid - i +1);
           }
    }
    while(i<=mid)
        temp[k++] = arr[i++];
    while(j<=r)
        temp[k++] = arr[j++];
    for(int i = l; i<= r; i ++)
        arr[i] = temp[i];
        
        return inv;
}

int mergeSort(int arr[],int temp[], int l, int r)
{
    int inv = 0;
    if(l<r)
    {
        int mid = l + (r-l)/2;
        inv += mergeSort(arr, temp, l, mid);
        inv += mergeSort(arr,temp, mid+1, r);
        
        inv += merge(arr,temp, l, mid, r);
    }
    return inv;
}
int main()
{
    int arr[] = {10, 9, 8, 7};
    int n = sizeof(arr)/sizeof(arr[0]);
    int temp[n];
    int inv = mergeSort(arr, temp, 0 , n-1);
    
    for(int i = 0 ; i < n ; i ++ )
    {
        cout<<arr[i]<<" ";
    }
    
    cout<< " inversion count is "<<inv<<endl;
}
